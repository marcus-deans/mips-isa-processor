$date
	Sat Jan 29 22:28:05 2022
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module practice_test_tb $end
$var wire 1 ! overflow $end
$var wire 1 " isNotEqual $end
$var wire 1 # isLessThan $end
$var wire 32 $ data_result [31:0] $end
$var reg 5 % ctrl_ALUopcode [4:0] $end
$var reg 5 & ctrl_shiftamt [4:0] $end
$var reg 32 ' data_operandA [31:0] $end
$var reg 32 ( data_operandB [31:0] $end
$scope module alutester $end
$var wire 1 ) check_less_than_special $end
$var wire 1 * check_less_than_standard $end
$var wire 1 + check_sub $end
$var wire 5 , ctrl_ALUopcode [4:0] $end
$var wire 5 - ctrl_shiftamt [4:0] $end
$var wire 32 . data_A [31:0] $end
$var wire 32 / data_operandA [31:0] $end
$var wire 32 0 data_operandB [31:0] $end
$var wire 1 # isLessThan $end
$var wire 1 " isNotEqual $end
$var wire 1 1 not_msb_A $end
$var wire 1 2 not_msb_B $end
$var wire 1 3 not_msb_sum $end
$var wire 32 4 op6 [31:0] $end
$var wire 32 5 op7 [31:0] $end
$var wire 1 ! overflow $end
$var wire 1 6 overflow_neg $end
$var wire 1 7 overflow_pos $end
$var wire 32 8 sum [31:0] $end
$var wire 32 9 right_shifted_value [31:0] $end
$var wire 32 : propagate [31:0] $end
$var wire 32 ; left_shifted_value [31:0] $end
$var wire 32 < gen [31:0] $end
$var wire 32 = data_result [31:0] $end
$var wire 32 > data_operandB_inverted [31:0] $end
$var wire 32 ? data_B [31:0] $end
$var wire 3 @ compute_sub [2:0] $end
$scope module a_and_b $end
$var wire 32 A a [31:0] $end
$var wire 32 B b [31:0] $end
$var wire 32 C out [31:0] $end
$upscope $end
$scope module a_or_b $end
$var wire 32 D a [31:0] $end
$var wire 32 E b [31:0] $end
$var wire 32 F out [31:0] $end
$upscope $end
$scope module add $end
$var wire 32 G a [31:0] $end
$var wire 32 H b [31:0] $end
$var wire 1 + c_in $end
$var wire 32 I g [31:0] $end
$var wire 32 J p [31:0] $end
$var wire 1 K w_block0 $end
$var wire 4 L w_block3 [3:0] $end
$var wire 3 M w_block2 [2:0] $end
$var wire 2 N w_block1 [1:0] $end
$var wire 32 O s [31:0] $end
$var wire 4 P p_out [3:0] $end
$var wire 4 Q g_out [3:0] $end
$var wire 1 R c_out $end
$var wire 5 S c [4:0] $end
$scope module block0 $end
$var wire 8 T a [7:0] $end
$var wire 8 U b [7:0] $end
$var wire 1 V c_in $end
$var wire 8 W g [7:0] $end
$var wire 1 X g_out $end
$var wire 8 Y p [7:0] $end
$var wire 1 Z p_out $end
$var wire 1 [ w1 $end
$var wire 5 \ w5 [4:0] $end
$var wire 8 ] w8 [7:0] $end
$var wire 7 ^ w7 [6:0] $end
$var wire 6 _ w6 [5:0] $end
$var wire 4 ` w4 [3:0] $end
$var wire 3 a w3 [2:0] $end
$var wire 2 b w2 [1:0] $end
$var wire 8 c s [7:0] $end
$var wire 1 d c_out $end
$var wire 9 e c [8:0] $end
$scope module alpha $end
$var wire 1 f c_in $end
$var wire 1 g s $end
$var wire 1 h x $end
$var wire 1 i y $end
$upscope $end
$scope module bravo $end
$var wire 1 j c_in $end
$var wire 1 k s $end
$var wire 1 l x $end
$var wire 1 m y $end
$upscope $end
$scope module charlie $end
$var wire 1 n c_in $end
$var wire 1 o s $end
$var wire 1 p x $end
$var wire 1 q y $end
$upscope $end
$scope module delta $end
$var wire 1 r c_in $end
$var wire 1 s s $end
$var wire 1 t x $end
$var wire 1 u y $end
$upscope $end
$scope module echo $end
$var wire 1 v c_in $end
$var wire 1 w s $end
$var wire 1 x x $end
$var wire 1 y y $end
$upscope $end
$scope module foxtrot $end
$var wire 1 z c_in $end
$var wire 1 { s $end
$var wire 1 | x $end
$var wire 1 } y $end
$upscope $end
$scope module golf $end
$var wire 1 ~ c_in $end
$var wire 1 !" s $end
$var wire 1 "" x $end
$var wire 1 #" y $end
$upscope $end
$scope module hotel $end
$var wire 1 $" c_in $end
$var wire 1 %" s $end
$var wire 1 &" x $end
$var wire 1 '" y $end
$upscope $end
$upscope $end
$scope module block1 $end
$var wire 8 (" a [7:0] $end
$var wire 8 )" b [7:0] $end
$var wire 1 *" c_in $end
$var wire 8 +" g [7:0] $end
$var wire 1 ," g_out $end
$var wire 8 -" p [7:0] $end
$var wire 1 ." p_out $end
$var wire 1 /" w1 $end
$var wire 5 0" w5 [4:0] $end
$var wire 8 1" w8 [7:0] $end
$var wire 7 2" w7 [6:0] $end
$var wire 6 3" w6 [5:0] $end
$var wire 4 4" w4 [3:0] $end
$var wire 3 5" w3 [2:0] $end
$var wire 2 6" w2 [1:0] $end
$var wire 8 7" s [7:0] $end
$var wire 1 8" c_out $end
$var wire 9 9" c [8:0] $end
$scope module alpha $end
$var wire 1 :" c_in $end
$var wire 1 ;" s $end
$var wire 1 <" x $end
$var wire 1 =" y $end
$upscope $end
$scope module bravo $end
$var wire 1 >" c_in $end
$var wire 1 ?" s $end
$var wire 1 @" x $end
$var wire 1 A" y $end
$upscope $end
$scope module charlie $end
$var wire 1 B" c_in $end
$var wire 1 C" s $end
$var wire 1 D" x $end
$var wire 1 E" y $end
$upscope $end
$scope module delta $end
$var wire 1 F" c_in $end
$var wire 1 G" s $end
$var wire 1 H" x $end
$var wire 1 I" y $end
$upscope $end
$scope module echo $end
$var wire 1 J" c_in $end
$var wire 1 K" s $end
$var wire 1 L" x $end
$var wire 1 M" y $end
$upscope $end
$scope module foxtrot $end
$var wire 1 N" c_in $end
$var wire 1 O" s $end
$var wire 1 P" x $end
$var wire 1 Q" y $end
$upscope $end
$scope module golf $end
$var wire 1 R" c_in $end
$var wire 1 S" s $end
$var wire 1 T" x $end
$var wire 1 U" y $end
$upscope $end
$scope module hotel $end
$var wire 1 V" c_in $end
$var wire 1 W" s $end
$var wire 1 X" x $end
$var wire 1 Y" y $end
$upscope $end
$upscope $end
$scope module block2 $end
$var wire 8 Z" a [7:0] $end
$var wire 8 [" b [7:0] $end
$var wire 1 \" c_in $end
$var wire 8 ]" g [7:0] $end
$var wire 1 ^" g_out $end
$var wire 8 _" p [7:0] $end
$var wire 1 `" p_out $end
$var wire 1 a" w1 $end
$var wire 5 b" w5 [4:0] $end
$var wire 8 c" w8 [7:0] $end
$var wire 7 d" w7 [6:0] $end
$var wire 6 e" w6 [5:0] $end
$var wire 4 f" w4 [3:0] $end
$var wire 3 g" w3 [2:0] $end
$var wire 2 h" w2 [1:0] $end
$var wire 8 i" s [7:0] $end
$var wire 1 j" c_out $end
$var wire 9 k" c [8:0] $end
$scope module alpha $end
$var wire 1 l" c_in $end
$var wire 1 m" s $end
$var wire 1 n" x $end
$var wire 1 o" y $end
$upscope $end
$scope module bravo $end
$var wire 1 p" c_in $end
$var wire 1 q" s $end
$var wire 1 r" x $end
$var wire 1 s" y $end
$upscope $end
$scope module charlie $end
$var wire 1 t" c_in $end
$var wire 1 u" s $end
$var wire 1 v" x $end
$var wire 1 w" y $end
$upscope $end
$scope module delta $end
$var wire 1 x" c_in $end
$var wire 1 y" s $end
$var wire 1 z" x $end
$var wire 1 {" y $end
$upscope $end
$scope module echo $end
$var wire 1 |" c_in $end
$var wire 1 }" s $end
$var wire 1 ~" x $end
$var wire 1 !# y $end
$upscope $end
$scope module foxtrot $end
$var wire 1 "# c_in $end
$var wire 1 ## s $end
$var wire 1 $# x $end
$var wire 1 %# y $end
$upscope $end
$scope module golf $end
$var wire 1 &# c_in $end
$var wire 1 '# s $end
$var wire 1 (# x $end
$var wire 1 )# y $end
$upscope $end
$scope module hotel $end
$var wire 1 *# c_in $end
$var wire 1 +# s $end
$var wire 1 ,# x $end
$var wire 1 -# y $end
$upscope $end
$upscope $end
$scope module block3 $end
$var wire 8 .# a [7:0] $end
$var wire 8 /# b [7:0] $end
$var wire 1 0# c_in $end
$var wire 8 1# g [7:0] $end
$var wire 1 2# g_out $end
$var wire 8 3# p [7:0] $end
$var wire 1 4# p_out $end
$var wire 1 5# w1 $end
$var wire 5 6# w5 [4:0] $end
$var wire 8 7# w8 [7:0] $end
$var wire 7 8# w7 [6:0] $end
$var wire 6 9# w6 [5:0] $end
$var wire 4 :# w4 [3:0] $end
$var wire 3 ;# w3 [2:0] $end
$var wire 2 <# w2 [1:0] $end
$var wire 8 =# s [7:0] $end
$var wire 1 ># c_out $end
$var wire 9 ?# c [8:0] $end
$scope module alpha $end
$var wire 1 @# c_in $end
$var wire 1 A# s $end
$var wire 1 B# x $end
$var wire 1 C# y $end
$upscope $end
$scope module bravo $end
$var wire 1 D# c_in $end
$var wire 1 E# s $end
$var wire 1 F# x $end
$var wire 1 G# y $end
$upscope $end
$scope module charlie $end
$var wire 1 H# c_in $end
$var wire 1 I# s $end
$var wire 1 J# x $end
$var wire 1 K# y $end
$upscope $end
$scope module delta $end
$var wire 1 L# c_in $end
$var wire 1 M# s $end
$var wire 1 N# x $end
$var wire 1 O# y $end
$upscope $end
$scope module echo $end
$var wire 1 P# c_in $end
$var wire 1 Q# s $end
$var wire 1 R# x $end
$var wire 1 S# y $end
$upscope $end
$scope module foxtrot $end
$var wire 1 T# c_in $end
$var wire 1 U# s $end
$var wire 1 V# x $end
$var wire 1 W# y $end
$upscope $end
$scope module golf $end
$var wire 1 X# c_in $end
$var wire 1 Y# s $end
$var wire 1 Z# x $end
$var wire 1 [# y $end
$upscope $end
$scope module hotel $end
$var wire 1 \# c_in $end
$var wire 1 ]# s $end
$var wire 1 ^# x $end
$var wire 1 _# y $end
$upscope $end
$upscope $end
$upscope $end
$scope module alu_mux $end
$var wire 32 `# in0 [31:0] $end
$var wire 32 a# in1 [31:0] $end
$var wire 32 b# in2 [31:0] $end
$var wire 32 c# in3 [31:0] $end
$var wire 32 d# in6 [31:0] $end
$var wire 32 e# in7 [31:0] $end
$var wire 3 f# select [2:0] $end
$var wire 32 g# w2 [31:0] $end
$var wire 32 h# w1 [31:0] $end
$var wire 32 i# out [31:0] $end
$var wire 32 j# in5 [31:0] $end
$var wire 32 k# in4 [31:0] $end
$scope module first_bottom $end
$var wire 32 l# in2 [31:0] $end
$var wire 32 m# in3 [31:0] $end
$var wire 2 n# select [1:0] $end
$var wire 32 o# w2 [31:0] $end
$var wire 32 p# w1 [31:0] $end
$var wire 32 q# out [31:0] $end
$var wire 32 r# in1 [31:0] $end
$var wire 32 s# in0 [31:0] $end
$scope module first_bottom $end
$var wire 32 t# in0 [31:0] $end
$var wire 32 u# in1 [31:0] $end
$var wire 1 v# select $end
$var wire 32 w# out [31:0] $end
$upscope $end
$scope module first_top $end
$var wire 1 x# select $end
$var wire 32 y# out [31:0] $end
$var wire 32 z# in1 [31:0] $end
$var wire 32 {# in0 [31:0] $end
$upscope $end
$scope module second $end
$var wire 32 |# in0 [31:0] $end
$var wire 32 }# in1 [31:0] $end
$var wire 1 ~# select $end
$var wire 32 !$ out [31:0] $end
$upscope $end
$upscope $end
$scope module first_top $end
$var wire 32 "$ in0 [31:0] $end
$var wire 32 #$ in1 [31:0] $end
$var wire 32 $$ in2 [31:0] $end
$var wire 32 %$ in3 [31:0] $end
$var wire 2 &$ select [1:0] $end
$var wire 32 '$ w2 [31:0] $end
$var wire 32 ($ w1 [31:0] $end
$var wire 32 )$ out [31:0] $end
$scope module first_bottom $end
$var wire 32 *$ in0 [31:0] $end
$var wire 32 +$ in1 [31:0] $end
$var wire 1 ,$ select $end
$var wire 32 -$ out [31:0] $end
$upscope $end
$scope module first_top $end
$var wire 32 .$ in0 [31:0] $end
$var wire 32 /$ in1 [31:0] $end
$var wire 1 0$ select $end
$var wire 32 1$ out [31:0] $end
$upscope $end
$scope module second $end
$var wire 32 2$ in0 [31:0] $end
$var wire 32 3$ in1 [31:0] $end
$var wire 1 4$ select $end
$var wire 32 5$ out [31:0] $end
$upscope $end
$upscope $end
$scope module second $end
$var wire 32 6$ in0 [31:0] $end
$var wire 32 7$ in1 [31:0] $end
$var wire 1 8$ select $end
$var wire 32 9$ out [31:0] $end
$upscope $end
$upscope $end
$scope module left_shifter $end
$var wire 5 :$ amount [4:0] $end
$var wire 32 ;$ x [31:0] $end
$var wire 32 <$ w5 [31:0] $end
$var wire 32 =$ w4 [31:0] $end
$var wire 32 >$ w3 [31:0] $end
$var wire 32 ?$ w2 [31:0] $end
$var wire 32 @$ w1 [31:0] $end
$var wire 32 A$ shift4 [31:0] $end
$var wire 32 B$ shift3 [31:0] $end
$var wire 32 C$ shift2 [31:0] $end
$var wire 32 D$ shift1 [31:0] $end
$var wire 32 E$ out [31:0] $end
$scope module s1 $end
$var wire 32 F$ x [31:0] $end
$var wire 32 G$ out [31:0] $end
$upscope $end
$scope module s16 $end
$var wire 32 H$ x [31:0] $end
$var wire 32 I$ out [31:0] $end
$upscope $end
$scope module s2 $end
$var wire 32 J$ x [31:0] $end
$var wire 32 K$ out [31:0] $end
$upscope $end
$scope module s4 $end
$var wire 32 L$ x [31:0] $end
$var wire 32 M$ out [31:0] $end
$upscope $end
$scope module s8 $end
$var wire 32 N$ x [31:0] $end
$var wire 32 O$ out [31:0] $end
$upscope $end
$upscope $end
$scope module not_b $end
$var wire 32 P$ a [31:0] $end
$var wire 32 Q$ out [31:0] $end
$upscope $end
$scope module right_shifter $end
$var wire 5 R$ amount [4:0] $end
$var wire 32 S$ x [31:0] $end
$var wire 32 T$ w5 [31:0] $end
$var wire 32 U$ w4 [31:0] $end
$var wire 32 V$ w3 [31:0] $end
$var wire 32 W$ w2 [31:0] $end
$var wire 32 X$ w1 [31:0] $end
$var wire 32 Y$ shift4 [31:0] $end
$var wire 32 Z$ shift3 [31:0] $end
$var wire 32 [$ shift2 [31:0] $end
$var wire 32 \$ shift1 [31:0] $end
$var wire 32 ]$ out [31:0] $end
$scope module s1 $end
$var wire 32 ^$ x [31:0] $end
$var wire 32 _$ out [31:0] $end
$upscope $end
$scope module s16 $end
$var wire 32 `$ x [31:0] $end
$var wire 32 a$ out [31:0] $end
$upscope $end
$scope module s2 $end
$var wire 32 b$ x [31:0] $end
$var wire 32 c$ out [31:0] $end
$upscope $end
$scope module s4 $end
$var wire 32 d$ x [31:0] $end
$var wire 32 e$ out [31:0] $end
$upscope $end
$scope module s8 $end
$var wire 32 f$ x [31:0] $end
$var wire 32 g$ out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 g$
b1 f$
b0 e$
b1 d$
b0 c$
b1 b$
b0 a$
b1 `$
b0 _$
b1 ^$
b1 ]$
b1 \$
b1 [$
b1 Z$
b1 Y$
b0 X$
b0 W$
b0 V$
b0 U$
b0 T$
b1 S$
b0 R$
b11111111111111111111111111111111 Q$
b0 P$
b100000000 O$
b1 N$
b10000 M$
b1 L$
b100 K$
b1 J$
b10000000000000000 I$
b1 H$
b10 G$
b1 F$
b1 E$
b1 D$
b1 C$
b1 B$
b1 A$
b10000000000000000 @$
b100000000 ?$
b10000 >$
b100 =$
b10 <$
b1 ;$
b0 :$
b0x0000000x0000000x0000000x000x1 9$
08$
b1 7$
b0x0000000x0000000x0000000x000x1 6$
b0x0000000x0000000x0000000x000x1 5$
04$
b0 3$
b0x0000000x0000000x0000000x000x1 2$
b0x0000000x0000000x0000000x000x1 1$
00$
b0x0000000x0000000x0000000x000x1 /$
b0x0000000x0000000x0000000x000x1 .$
b0 -$
0,$
b1 +$
b0 *$
b0x0000000x0000000x0000000x000x1 )$
b0x0000000x0000000x0000000x000x1 ($
b0 '$
b0 &$
b1 %$
b0 $$
b0x0000000x0000000x0000000x000x1 #$
b0x0000000x0000000x0000000x000x1 "$
b1 !$
0~#
b0 }#
b1 |#
b1 {#
b1 z#
b1 y#
0x#
b0 w#
0v#
b0 u#
b0 t#
b1 s#
b1 r#
b1 q#
b1 p#
b0 o#
b0 n#
b0 m#
b0 l#
b1 k#
b1 j#
b0x0000000x0000000x0000000x000x1 i#
b0x0000000x0000000x0000000x000x1 h#
b1 g#
b0 f#
b0 e#
b0 d#
b1 c#
b0 b#
b0x0000000x0000000x0000000x000x1 a#
b0x0000000x0000000x0000000x000x1 `#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
xU#
xT#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
b0x00000 ?#
0>#
b0x00000 =#
b0 <#
b0 ;#
b0 :#
b0 9#
b0 8#
b0 7#
bz0000 6#
05#
04#
b0 3#
02#
b0 1#
00#
b0 /#
b0 .#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
x##
x"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
b0x00000 k"
0j"
b0x00000 i"
b0 h"
b0 g"
b0 f"
b0 e"
b0 d"
b0 c"
bz0000 b"
0a"
0`"
b0 _"
0^"
b0 ]"
0\"
b0 ["
b0 Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
xO"
xN"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
b0x00000 9"
08"
b0x00000 7"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
bz0000 0"
0/"
0."
b0 -"
0,"
b0 +"
0*"
b0 )"
b0 ("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
x{
xz
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
xk
xj
0i
1h
1g
0f
b0x000x0 e
0d
b0x000x1 c
b0 b
b0 a
b0 `
b0 _
b0 ^
b0 ]
bz0000 \
x[
0Z
b1 Y
0X
b0 W
0V
b0 U
b1 T
b0 S
0R
b0 Q
b0 P
b0x0000000x0000000x0000000x000x1 O
b0 N
b0 M
b0 L
0K
b1 J
b0 I
b0 H
b1 G
b1 F
b0 E
b1 D
b0 C
b0 B
b1 A
b110 @
b0 ?
b11111111111111111111111111111111 >
b0x0000000x0000000x0000000x000x1 =
b0 <
b1 ;
b1 :
b1 9
b0x0000000x0000000x0000000x000x1 8
07
06
b0 5
b0 4
13
12
11
b0 0
b1 /
b1 .
b0 -
b0 ,
0+
0*
0)
b0 (
b1 '
b0 &
b0 %
b0x0000000x0000000x0000000x000x1 $
0#
1"
0!
$end
#800
